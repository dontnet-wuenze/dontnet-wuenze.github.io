"use strict";(self.webpackChunkboss_wiki=self.webpackChunkboss_wiki||[]).push([[3918],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},s=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=l(r),d=a,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||o;return r?n.createElement(f,c(c({ref:t},s),{},{components:r})):n.createElement(f,c({ref:t},s))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var l=2;l<o;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5816:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={},c=void 0,i={unversionedId:"tech/c++/string append() \u548c += \u533a\u522b",id:"tech/c++/string append() \u548c += \u533a\u522b",title:"string append() \u548c += \u533a\u522b",description:"\u6ca1\u6709\u533a\u522b",source:"@site/docs/tech/c++/string append() \u548c += \u533a\u522b.md",sourceDirName:"tech/c++",slug:"/tech/c++/string append() \u548c += \u533a\u522b",permalink:"/docs/tech/c++/string append() \u548c += \u533a\u522b",draft:!1,editUrl:"https://github.com/dontnet-wuenze/Wiki_Docusaurus/edit/master/docs/tech/c++/string append() \u548c += \u533a\u522b.md",tags:[],version:"current",frontMatter:{},sidebar:"techSidebar",previous:{title:"lambda \u51fd\u6570",permalink:"/docs/tech/c++/lambda \u51fd\u6570"},next:{title:"\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4e0e\u8d4b\u503c\u51fd\u6570\u533a\u522b",permalink:"/docs/tech/c++/\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4e0e\u8d4b\u503c\u51fd\u6570\u533a\u522b"}},p={},l=[],s={toc:l};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u6ca1\u6709\u533a\u522b"),(0,a.kt)("p",null,"+= \u662f\u4e00\u4e2a\u5185\u8054\u51fd\u6570, \u5728\u5185\u90e8\u8c03\u7528\u4e86 append()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"string (1): ",(0,a.kt)("inlineCode",{parentName:"li"},"string& operator+= (const string& str)"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"basic_string& operator+=(const basic_string& _Right) {\n    return append(_Right);\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"c-string (2): ",(0,a.kt)("inlineCode",{parentName:"li"},"string& operator+= (const char* s)"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"basic_string& operator+=(_In_z_ const _Elem* const _Ptr) {\n    return append(_Ptr);\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"character (3): ",(0,a.kt)("inlineCode",{parentName:"li"},"string& operator+= (char c)"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"basic_string& operator+=(_Elem _Ch) {\n    push_back(_Ch);\n    return *this;\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Source: ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/microsoft/STL/blob/main/stl/inc/xstring"},"GitHub: Microsoft/STL"))))}u.isMDXComponent=!0}}]);